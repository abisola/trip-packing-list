{"ast":null,"code":"var _jsxFileName = \"/Users/abisola/dev/trip-packing-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, doc, onSnapshot, updateDoc, setDoc } from 'firebase/firestore';\nimport { Plus, Check, User, Wifi, WifiOff } from 'lucide-react';\nimport './App.css';\n\n// Replace with YOUR Firebase config from the setup steps\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB9iFIxuUegNbp0PObkVhmutyMMAxno73A\",\n  authDomain: \"abisolafatokun.firebaseapp.com\",\n  projectId: \"abisolafatokun\",\n  storageBucket: \"abisolafatokun.firebasestorage.app\",\n  messagingSenderId: \"980985992618\",\n  appId: \"1:980985992618:web:9a17522484297e244c47d3\",\n  measurementId: \"G-XKDWT39C0B\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst TripPackingList = () => {\n  _s();\n  const [categories, setCategories] = useState({\n    'Food and refreshments': [{\n      id: 1,\n      name: 'Rice',\n      completed: false,\n      completedBy: null\n    }, {\n      id: 2,\n      name: 'BBQ meat',\n      completed: false,\n      completedBy: null\n    }],\n    'Kitchen and bathroom': [{\n      id: 3,\n      name: 'Dishwasher tablets',\n      completed: false,\n      completedBy: null\n    }, {\n      id: 4,\n      name: 'Toilet roll (x2)',\n      completed: false,\n      completedBy: null\n    }],\n    'Play and fun': [{\n      id: 5,\n      name: 'Badminton',\n      completed: false,\n      completedBy: null\n    }, {\n      id: 6,\n      name: 'Frisbee',\n      completed: false,\n      completedBy: null\n    }],\n    'Entertainment': [{\n      id: 7,\n      name: 'Projector',\n      completed: false,\n      completedBy: null\n    }, {\n      id: 8,\n      name: 'Boom box',\n      completed: false,\n      completedBy: null\n    }]\n  });\n  const [newItems, setNewItems] = useState({});\n  const [newPersonName, setNewPersonName] = useState('');\n  const [showNameInput, setShowNameInput] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastSync, setLastSync] = useState(new Date());\n\n  // Real-time sync with Firebase\n  useEffect(() => {\n    const tripListRef = doc(db, 'trips', 'main-trip');\n\n    // Listen for real-time updates\n    const unsubscribe = onSnapshot(tripListRef, doc => {\n      if (doc.exists()) {\n        const data = doc.data();\n        if (data.categories) {\n          setCategories(data.categories);\n          setLastSync(new Date());\n          setIsConnected(true);\n        }\n      } else {\n        // Initialize document if it doesn't exist\n        setDoc(tripListRef, {\n          categories\n        });\n      }\n    }, error => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Sync data with Firebase\n  const syncWithFirebase = async updatedCategories => {\n    try {\n      const tripListRef = doc(db, 'trips', 'main-trip');\n      await updateDoc(tripListRef, {\n        categories: updatedCategories\n      });\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Sync failed:', error);\n      setIsConnected(false);\n    }\n  };\n  const addItem = async category => {\n    const itemName = newItems[category];\n    if (!(itemName !== null && itemName !== void 0 && itemName.trim())) return;\n    const newId = Date.now();\n    const updatedCategories = {\n      ...categories,\n      [category]: [...categories[category], {\n        id: newId,\n        name: itemName.trim(),\n        completed: false,\n        completedBy: null\n      }]\n    };\n    setNewItems(prev => ({\n      ...prev,\n      [category]: ''\n    }));\n    await syncWithFirebase(updatedCategories);\n  };\n  const toggleItem = async (category, itemId, personName) => {\n    const updatedCategories = {\n      ...categories,\n      [category]: categories[category].map(item => item.id === itemId ? {\n        ...item,\n        completed: !item.completed,\n        completedBy: !item.completed ? personName : null\n      } : item)\n    };\n    setShowNameInput(prev => ({\n      ...prev,\n      [itemId]: false\n    }));\n    setNewPersonName('');\n    await syncWithFirebase(updatedCategories);\n  };\n  const handleCheckboxClick = (category, item) => {\n    if (item.completed) {\n      toggleItem(category, item.id, null);\n    } else {\n      setShowNameInput(prev => ({\n        ...prev,\n        [item.id]: true\n      }));\n    }\n  };\n  const handleNameSubmit = (category, item) => {\n    if (newPersonName.trim()) {\n      toggleItem(category, item.id, newPersonName.trim());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [isConnected ? /*#__PURE__*/_jsxDEV(Wifi, {\n              className: `status-icon green`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(WifiOff, {\n              className: `status-icon red`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-text\",\n              children: isConnected ? 'Live' : 'Offline'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date-text\",\n          children: \"9 August 2025 at 13:15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Things to take on trip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sync-text\",\n          children: [\"Last synced: \", lastSync.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: Object.entries(categories).map(([categoryName, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"category-title\",\n            children: categoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items-list\",\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCheckboxClick(categoryName, item),\n                className: `checkbox ${item.completed ? 'completed' : ''}`,\n                children: item.completed && /*#__PURE__*/_jsxDEV(Check, {\n                  className: \"check-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `item-text ${item.completed ? 'completed' : ''}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), item.completedBy && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"completed-by\",\n                children: [/*#__PURE__*/_jsxDEV(User, {\n                  className: \"user-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.completedBy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), Object.entries(showNameInput).map(([itemId, show]) => {\n            const item = items.find(i => i.id === parseInt(itemId));\n            return show && item ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"name-input-label\",\n                children: [\"Who is taking \\\"\", item.name, \"\\\"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-input-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newPersonName,\n                  onChange: e => setNewPersonName(e.target.value),\n                  placeholder: \"Enter your name\",\n                  className: \"name-input\",\n                  onKeyPress: e => {\n                    if (e.key === 'Enter') {\n                      handleNameSubmit(categoryName, item);\n                    }\n                  },\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleNameSubmit(categoryName, item),\n                  className: \"button button-primary\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowNameInput(prev => ({\n                    ...prev,\n                    [itemId]: false\n                  })),\n                  className: \"button button-secondary\",\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, itemId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this) : null;\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-item-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newItems[categoryName] || '',\n              onChange: e => setNewItems(prev => ({\n                ...prev,\n                [categoryName]: e.target.value\n              })),\n              placeholder: \"Add new item...\",\n              className: \"add-item-input\",\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  addItem(categoryName);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addItem(categoryName),\n              className: \"add-button\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                className: \"add-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, categoryName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"footer-text\",\n          children: \"\\uD83D\\uDE80 Real-time collaborative packing list - share this link with your trip companions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(TripPackingList, \"ZPIacoCPl8+G8iLAYZf0/t+p09Q=\");\n_c = TripPackingList;\nexport default TripPackingList;\nvar _c;\n$RefreshReg$(_c, \"TripPackingList\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getFirestore","doc","onSnapshot","updateDoc","setDoc","Plus","Check","User","Wifi","WifiOff","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","TripPackingList","_s","categories","setCategories","id","name","completed","completedBy","newItems","setNewItems","newPersonName","setNewPersonName","showNameInput","setShowNameInput","isConnected","setIsConnected","lastSync","setLastSync","Date","tripListRef","unsubscribe","exists","data","error","console","syncWithFirebase","updatedCategories","addItem","category","itemName","trim","newId","now","prev","toggleItem","itemId","personName","map","item","handleCheckboxClick","handleNameSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","Object","entries","categoryName","items","onClick","show","find","i","parseInt","type","value","onChange","e","target","placeholder","onKeyPress","key","autoFocus","_c","$RefreshReg$"],"sources":["/Users/abisola/dev/trip-packing-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, doc, onSnapshot, updateDoc, setDoc } from 'firebase/firestore';\nimport { Plus, Check, User, Wifi, WifiOff } from 'lucide-react';\nimport './App.css';\n\n// Replace with YOUR Firebase config from the setup steps\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB9iFIxuUegNbp0PObkVhmutyMMAxno73A\",\n  authDomain: \"abisolafatokun.firebaseapp.com\",\n  projectId: \"abisolafatokun\",\n  storageBucket: \"abisolafatokun.firebasestorage.app\",\n  messagingSenderId: \"980985992618\",\n  appId: \"1:980985992618:web:9a17522484297e244c47d3\",\n  measurementId: \"G-XKDWT39C0B\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\ninterface Item {\n  id: number;\n  name: string;\n  completed: boolean;\n  completedBy: string | null;\n}\n\ninterface Categories {\n  [key: string]: Item[];\n}\n\nconst TripPackingList = () => {\n  const [categories, setCategories] = useState<Categories>({\n    'Food and refreshments': [\n      { id: 1, name: 'Rice', completed: false, completedBy: null },\n      { id: 2, name: 'BBQ meat', completed: false, completedBy: null }\n    ],\n    'Kitchen and bathroom': [\n      { id: 3, name: 'Dishwasher tablets', completed: false, completedBy: null },\n      { id: 4, name: 'Toilet roll (x2)', completed: false, completedBy: null }\n    ],\n    'Play and fun': [\n      { id: 5, name: 'Badminton', completed: false, completedBy: null },\n      { id: 6, name: 'Frisbee', completed: false, completedBy: null }\n    ],\n    'Entertainment': [\n      { id: 7, name: 'Projector', completed: false, completedBy: null },\n      { id: 8, name: 'Boom box', completed: false, completedBy: null }\n    ]\n  });\n\n  const [newItems, setNewItems] = useState<{[key: string]: string}>({});\n  const [newPersonName, setNewPersonName] = useState('');\n  const [showNameInput, setShowNameInput] = useState<{[key: number]: boolean}>({});\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastSync, setLastSync] = useState(new Date());\n\n  // Real-time sync with Firebase\n  useEffect(() => {\n    const tripListRef = doc(db, 'trips', 'main-trip');\n\n    // Listen for real-time updates\n    const unsubscribe = onSnapshot(tripListRef, (doc) => {\n      if (doc.exists()) {\n        const data = doc.data();\n        if (data.categories) {\n          setCategories(data.categories);\n          setLastSync(new Date());\n          setIsConnected(true);\n        }\n      } else {\n        // Initialize document if it doesn't exist\n        setDoc(tripListRef, { categories });\n      }\n    }, (error) => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  // Sync data with Firebase\n  const syncWithFirebase = async (updatedCategories: Categories) => {\n    try {\n      const tripListRef = doc(db, 'trips', 'main-trip');\n      await updateDoc(tripListRef, { categories: updatedCategories });\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Sync failed:', error);\n      setIsConnected(false);\n    }\n  };\n\n  const addItem = async (category: string) => {\n    const itemName = newItems[category];\n    if (!itemName?.trim()) return;\n\n    const newId = Date.now();\n    const updatedCategories = {\n      ...categories,\n      [category]: [\n        ...categories[category],\n        { id: newId, name: itemName.trim(), completed: false, completedBy: null }\n      ]\n    };\n\n    setNewItems(prev => ({ ...prev, [category]: '' }));\n    await syncWithFirebase(updatedCategories);\n  };\n\n  const toggleItem = async (category: string, itemId: number, personName: string | null) => {\n    const updatedCategories = {\n      ...categories,\n      [category]: categories[category].map(item =>\n        item.id === itemId\n          ? {\n              ...item,\n              completed: !item.completed,\n              completedBy: !item.completed ? personName : null\n            }\n          : item\n      )\n    };\n\n    setShowNameInput(prev => ({ ...prev, [itemId]: false }));\n    setNewPersonName('');\n    await syncWithFirebase(updatedCategories);\n  };\n\n  const handleCheckboxClick = (category: string, item: Item) => {\n    if (item.completed) {\n      toggleItem(category, item.id, null);\n    } else {\n      setShowNameInput(prev => ({ ...prev, [item.id]: true }));\n    }\n  };\n\n  const handleNameSubmit = (category: string, item: Item) => {\n    if (newPersonName.trim()) {\n      toggleItem(category, item.id, newPersonName.trim());\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-card\">\n        {/* Header */}\n        <div className=\"header\">\n          <div className=\"header-top\">\n            <div className=\"status-indicator\">\n              {isConnected ? (\n                <Wifi className={`status-icon green`} />\n              ) : (\n                <WifiOff className={`status-icon red`} />\n              )}\n              <span className=\"status-text\">\n                {isConnected ? 'Live' : 'Offline'}\n              </span>\n            </div>\n          </div>\n          <p className=\"date-text\">9 August 2025 at 13:15</p>\n          <h1 className=\"main-title\">Things to take on trip</h1>\n          <p className=\"sync-text\">\n            Last synced: {lastSync.toLocaleTimeString()}\n          </p>\n        </div>\n\n        {/* Categories */}\n        <div className=\"categories-container\">\n          {Object.entries(categories).map(([categoryName, items]) => (\n            <div key={categoryName} className=\"category\">\n              <h2 className=\"category-title\">{categoryName}</h2>\n\n              {/* Items */}\n              <div className=\"items-list\">\n                {items.map((item) => (\n                  <div key={item.id} className=\"item-row\">\n                    <button\n                      onClick={() => handleCheckboxClick(categoryName, item)}\n                      className={`checkbox ${item.completed ? 'completed' : ''}`}\n                    >\n                      {item.completed && <Check className=\"check-icon\" />}\n                    </button>\n                    <span className={`item-text ${item.completed ? 'completed' : ''}`}>\n                      {item.name}\n                    </span>\n                    {item.completedBy && (\n                      <div className=\"completed-by\">\n                        <User className=\"user-icon\" />\n                        <span>{item.completedBy}</span>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              {/* Name input for checking off items */}\n              {Object.entries(showNameInput).map(([itemId, show]) => {\n                const item = items.find(i => i.id === parseInt(itemId));\n                return show && item ? (\n                  <div key={itemId} className=\"name-input-container\">\n                    <p className=\"name-input-label\">Who is taking \"{item.name}\"?</p>\n                    <div className=\"name-input-form\">\n                      <input\n                        type=\"text\"\n                        value={newPersonName}\n                        onChange={(e) => setNewPersonName(e.target.value)}\n                        placeholder=\"Enter your name\"\n                        className=\"name-input\"\n                        onKeyPress={(e) => {\n                          if (e.key === 'Enter') {\n                            handleNameSubmit(categoryName, item);\n                          }\n                        }}\n                        autoFocus\n                      />\n                      <button\n                        onClick={() => handleNameSubmit(categoryName, item)}\n                        className=\"button button-primary\"\n                      >\n                        ✓\n                      </button>\n                      <button\n                        onClick={() => setShowNameInput(prev => ({ ...prev, [itemId]: false }))}\n                        className=\"button button-secondary\"\n                      >\n                        ✕\n                      </button>\n                    </div>\n                  </div>\n                ) : null;\n              })}\n\n              {/* Add new item */}\n              <div className=\"add-item-form\">\n                <input\n                  type=\"text\"\n                  value={newItems[categoryName] || ''}\n                  onChange={(e) => setNewItems(prev => ({ ...prev, [categoryName]: e.target.value }))}\n                  placeholder=\"Add new item...\"\n                  className=\"add-item-input\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      addItem(categoryName);\n                    }\n                  }}\n                />\n                <button\n                  onClick={() => addItem(categoryName)}\n                  className=\"add-button\"\n                >\n                  <Plus className=\"add-icon\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Footer */}\n        <div className=\"footer\">\n          <p className=\"footer-text\">\n            🚀 Real-time collaborative packing list - share this link with your trip companions!\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TripPackingList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}